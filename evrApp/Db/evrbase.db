# Base record set for an EVR

record(bi, "$(P)enable") {
  field(DTYP, "EVR")
  field(INP , "#C$(C) S0 @Enable")
  field(DESC, "Master enable status for EVR device")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(bo, "$(P)enable:set") {
  field(DTYP, "EVR")
  field(OUT , "#C$(C) S0 @Enable")
  field(DESC, "Master enable for EVR device")
  field(PINI, "YES")
  field(VAL , "1")
  field(FLNK, "$(P)enable")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(bi, "$(P)link:sts") {
  field(DTYP, "EVR")
  field(INP , "#C$(C) S0 @Link Status")
  field(DESC, "Status of event link")
  field(SCAN, "1 second")
  field(ZNAM, "Fail")
  field(ONAM, "OK")
}

record(longin, "$(P)link:cnt") {
  field(DTYP, "EVR")
  field(DESC, "Receive Error Count")
  field(INP , "#C$(C) S0 @Receive Error Count")
  field(PINI, "YES")
  field(SCAN, "1 second")
  field(DESC, "Rx error count")
}

record(ao, "$(P)clock:set") {
  field(DTYP, "EVR")
  field(OUT , "#C$(C) S0 @Clock")
  field(PINI, "YES")
  field(DESC, "Event Link speed")
  field(VAL , "124.916")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(PREC, "3")
  field(FLNK, "$(P)clock")
}

record(ai, "$(P)clock") {
  field(DTYP, "EVR")
  field(INP , "#C$(C) S0 @Clock")
  field(SCAN, "1 second")
  field(DESC, "Event Link speed")
  field(PINI, "YES")
  field(UDF , "0")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(PREC, "3")
  field(FLNK, "$(P)clock:error")
}

record(calc, "$(P)clock:error") {
  field(CALC, "(A-B)*1000")
  field(EGU , "KHz")
  field(PREC, "3")
  field(INPA, "$(P)clock:set")
  field(INPB, "$(P)clock")
}

record(bi, "$(P)pll") {
  field(DTYP, "EVR")
  field(INP , "#C$(C) S0 @PLL Lock Status")
  field(SCAN, "1 second")
  field(PINI, "YES")
  field(DESC, "Status of PLL")
  field(ZNAM, "Error")
  field(ONAM, "OK")
}

record(longin, "$(P)hwtype") {
  field(DTYP, "EVR")
  field(INP , "#C$(C) S0 @Model")
  field(PINI, "YES")
  field(DESC, "Hardware type code")
}

record(longin, "$(P)ver") {
  field(DTYP, "EVR")
  field(INP , "#C$(C) S0 @Version")
  field(PINI, "YES")
  field(DESC, "Firmware version")
}

record(fanout, "$(P)ts:init") {
  field(PINI, "YES")
  field(LNK1, "$(P)ts:clock:set")
  field(LNK2, "$(P)ts:source")
}

record(mbbo, "$(P)ts:source") {
  field( DTYP, "Raw Soft Channel")
  field( OUT , "$(P)ts:source:raw")
  field( ZRST, "Event clock")
  field( ONST, "Mapped code(s)")
  field( TWST, "DBus 4")
  field( ZRVL, "0")
  field( ONVL, "1")
  field( TWVL, "2")
  field(FLNK, "$(P)ts:source:raw")
}

record(longout, "$(P)ts:source:raw") {
  field(DTYP, "EVR")
  field(OUT , "#C$(C) S0 @Timestamp Source")
  field(FLNK, "$(P)ts:source:rbv")
}

record(longin, "$(P)ts:source:rbv") {
  field(DTYP, "EVR")
  field(INP , "#C$(C) S0 @Timestamp Source")
  field(FLNK, "$(P)ts:clock")
}

record(ao, "$(P)ts:clock:set") {
  field(DTYP, "EVR")
  field(OUT , "#C$(C) S0 @Timestamp Clock")
  field(DESC, "Timestamp speed")
  field(VAL , "10.0")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(PREC, "3")
  field(FLNK, "$(P)ts:clock")
}

record(ai, "$(P)ts:clock") {
  field(DTYP, "EVR")
  field(INP , "#C$(C) S0 @Timestamp Clock")
  field(SCAN, "1 second")
  field(DESC, "Timestamp speed")
  field(PINI, "YES")
  field(UDF , "0")
  field(EGU , "MHz")
  field(LINR, "LINEAR")
  field(ESLO, "1e-6")
  field(PREC, "3")
  field(FLNK, "$(P)ts:div")
}

record(longin, "$(P)ts:div") {
  field(DTYP, "EVR")
  field(INP , "#C$(C) S0 @Timestamp Prescaler")
  field(DESC, "Timestamp divider")
}

record(stringin, "$(P)ts") {
  field(DTYP, "EVR Timestamp")
  field(INP , "#C$(C) S0 @")
  field(SCAN, "1 second")
}
